from pyramid.httpexceptions import HTTPNotFound
from pyramid.view import view_config, notfound_view_config
from pyramid.request import Request
import MySQLdb as mdb
import transaction
from pyramid_mailer.message import Message
#from pyramid.httpexceptions import HTTPFound

@notfound_view_config(append_slash=True)
def notfound(request):
    return HTTPNotFound('Not found, bro.')

@view_config(route_name='home', renderer='templates/mytemplate.jinja2')
def my_view(request):
	test={}
	#k=str(1)
	#k='row'+'1'
	test['company']=['CDOT','CDOT1']
	#k=str(2)
	#k = 'row' + '2'
	test['project']=['jinventory', 'jinventory1']
	return test


# def laptop_view(request):
# 	group=request.params['group']
# 	print group
# 	url = request.route_url('laptops')
# 	print
# 	print url
# 	return HTTPFound(location=url)

@view_config(route_name='laptops', request_method='POST', renderer='templates/mytemplate2.jinja2')
def laptop_view1(request):
	test={}
	#k=str(1)
	#k='row'+'1'
	test['company']=['CDOT','CDOT1']
	#k=str(2)
	#k = 'row' + '2'
	test['group']=request.params['group']
	return test

#@view_config(route_name='laptops', request_method='POST', request_param='group=modem', renderer='templates/mytemplate3.jinja2')
#def laptop_view2(request):
#	test={}
#	#k=str(1)
#	#k='row'+'1'
#	test['company']=['CDOT','CDOT1']
	#k=str(2)
	#k = 'row' + '2'
#	test['group']=request.params['group']
#	return test

@view_config(route_name='laptops', request_method='POST', request_param='group=satwl', renderer='templates/laptop.jinja2')
def laptop_view(request):	


	
	print "\n Connecting to laptops database .....\n"
	con = mdb.connect('localhost','laptopUser','laptopUser','laptops')
	print "\n connection established \n"
	cur = con.cursor()

	val={}
	group=request.params['group']
	if group=='satwl':
		tbl='laptop'
	else:
		
		tbl=group
	q= "SELECT * from %s" % (tbl)
	val['query']=q
	#q1= "SELECT * from laptop "
	cur.execute(q)
	
	if cur.rowcount>0:
		rows=cur.fetchall()
		i=1
		for row in rows:
			k='row'+str(i)
			val[k]=row
			i=i+1
	cur.close()
	con.close()
	print "\n connection Closed....\n"

	
	groupC=group.upper()
	val['groupnameC']=groupC

	return val



@view_config(route_name='request', request_method='GET',renderer='templates/request.jinja2')
def request_view(request):
	
	print "\n Connecting to laptops database .....\n"
	con = mdb.connect('localhost','laptopUser','laptopUser','laptops')
	print "\n connection established \n"
	cur = con.cursor()

	requester = request.params['empno']
	print requester
	Lno= request.params['Lno']
	print Lno

	q="SELECT name,emailID from satwlInfo where empID = '%s' " % (requester)
	print "query 1 : ",q
	cur.execute(q)
	print "\nquery 1 executed"
	if cur.rowcount>0:
		row=cur.fetchone()
		name1,emailid1 = row[0],row[1]
		print "\nemailid 1 : ",emailid1
		print "\nname1 : ",name1

	q="SELECT eID from laptop where laptopNo = '%s' " % (Lno)
	print q
	print 
	cur.execute(q)
	print "query executed ...\n"
	if cur.rowcount>0:
		eid=cur.fetchone()[0]
		
		print "eid : ",eid

	else:
		print "\n no data found corresponding to laptop no. %s" % (Lno)

	q="SELECT name,emailID from satwlInfo where empID = '%s' " % (eid)
	print "\n new querey : ",q
	cur.execute(q)
	print "\n querey 2 executed"
	if cur.rowcount>0:
		row=cur.fetchone()
		print " row : ",row
		ename,emailid2 = row[0],row[1]


	cur.close()
	con.close()

	#mailer=get_mailer(request)
	mailer = request.registry['mailer']
	message = Message(subject="hello world",
                  sender="admin@clinventory.com",
                  recipients=["%s@cdot.in"%(emailid1)],
                  body="This mail is generated by clinventory\n\n%s requested you to release the laptop no %s that you are having currently.\n\nFollow the link to release or decline\n\n link : http://localhost:6543/clinventory/release \n\n" % (name1,Lno))


	message2 = Message(subject="hello world",
                  sender="admin@clinventory.com",
                  recipients=["%s@cdot.in"%(emailid2)],
                  body="hello, anirban roy das")



	mailer.send(message)
	transaction.commit()
	test={}
	#k=str(1)
	#k='row'+'1'
	test['empname']=ename
	#k=str(2)
	#k = 'row' + '2'
	test['emailid']=emailid2
	return test


# @view_config(route_name='release', renderer='templates/release.pt')
# def my_view(request):
# 	test={}
# 	#k=str(1)
# 	#k='row'+'1'
# 	test['company']=['CDOT','CDOT1']
# 	#k=str(2)
# 	#k = 'row' + '2'
# 	test['project']=['clinventory', 'clinventory1']
# 	return test

# @view_config(route_name='accept', renderer='templates/accept.pt')
# def my_view(request):
# 	test={}
# 	#k=str(1)
# 	#k='row'+'1'
# 	test['company']=['CDOT','CDOT1']
# 	#k=str(2)
# 	#k = 'row' + '2'
# 	test['project']=['clinventory', 'clinventory1']
# 	return test
